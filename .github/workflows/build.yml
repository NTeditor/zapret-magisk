name: build
run-name: ${{ startsWith(github.ref, 'refs/tags/v') && format('Release {0}', github.ref_name) || null }}

on:
  workflow_dispatch:
  push:
    tags:
      - [0-9]+*
      
jobs:
  build-android:
    name: Android ${{ matrix.abi }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - abi: armeabi-v7a
            target: armv7a-linux-androideabi
          - abi: arm64-v8a
            target: aarch64-linux-android
          - abi: x86
            target: i686-linux-android
          - abi: x86_64
            target: x86_64-linux-android
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all history is fetched, needed for git version info
          path: zapret

      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r21e

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool autoconf automake pkg-config

      - name: Build
        env:
          ABI: ${{ matrix.abi }}
          TARGET: ${{ matrix.target }}
        run: |
          set -e
          set -x

          DEPS_DIR=$GITHUB_WORKSPACE/deps
          export TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
          export API=21
          export CC="$TOOLCHAIN/bin/clang --target=$TARGET$API"
          export AR=$TOOLCHAIN/bin/llvm-ar
          export AS=$CC
          export LD=$TOOLCHAIN/bin/ld
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          export PKG_CONFIG_PATH=$DEPS_DIR/lib/pkgconfig

          mkdir -p $DEPS_DIR

          # netfilter libs
          wget -qO- https://www.netfilter.org/pub/libnfnetlink/libnfnetlink-1.0.2.tar.bz2 | tar -xj
          wget -qO- https://www.netfilter.org/pub/libmnl/libmnl-1.0.5.tar.bz2 | tar -xj
          wget -qO- https://www.netfilter.org/pub/libnetfilter_queue/libnetfilter_queue-1.0.5.tar.bz2 | tar -xj
          patch -p1 -d libnetfilter_queue-1.0.5 -i $GITHUB_WORKSPACE/zapret/.github/workflows/libnetfilter_queue-android.patch

          for lib in libmnl-1.0.5 libnfnetlink-1.0.2 libnetfilter_queue-1.0.5 ; do
            (
              cd $lib
              autoreconf -fi
              CFLAGS="-Os -flto=auto -Wno-implicit-function-declaration" \
              ./configure --prefix= --host=$TARGET --enable-static --disable-shared --disable-dependency-tracking
              make -j$(nproc) install DESTDIR=$DEPS_DIR
            )
            sed -i "s|^prefix=.*|prefix=$DEPS_DIR|g" $DEPS_DIR/lib/pkgconfig/$(basename $lib .*-*).pc
          done

          # Build nfqws
          cd $GITHUB_WORKSPACE/zapret/src/nfqws
          make CC="$CC" LDFLAGS="-static -L$DEPS_DIR/lib" CFLAGS="-I$DEPS_DIR/include -DANDROID -Os"

          mkdir -p $GITHUB_WORKSPACE/output/$ABI
          cp nfqws $GITHUB_WORKSPACE/output/$ABI/

      - name: Prepare Module
        env:
          MODULE_DIR: ${{ github.workspace }}/module
          ZAPRET_DIR: ${{ github.workspace }}/zapret
          ABI: ${{ matrix.abi }}
        run: |
          set -e
          set -x

          # Clone the zapret-magisk repository into MODULE_DIR
          git clone https://github.com/sevcator/zapret-magisk.git "$MODULE_DIR"

          # Ensure the binaries directory exists
          mkdir -p "$MODULE_DIR/binaries"

          # Copy the freshly built nfqws binary into the module's binaries folder
          cp "$GITHUB_WORKSPACE/output/$ABI/nfqws" "$MODULE_DIR/binaries/"

          # Update version information in module.prop
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION="${{ github.ref_name }}"
          else
            DATE=$(date +%Y%m%d)
            COMMIT_HASH=$(git -C "$ZAPRET_DIR" rev-parse --short HEAD)
            VERSION="$DATE-$COMMIT_HASH"
          fi

          # Update module.prop
          sed -i "s/^version=.*/version=${VERSION}/" "$MODULE_DIR/module.prop"
          sed -i "s/^description=.*/description=Zapret Magisk Module for $ABI/" "$MODULE_DIR/module.prop"

          # Ensure scripts have executable permissions
          find "$MODULE_DIR" -type f -iname "*.sh" -exec chmod +x {} \;

          # Zip the module directory from within the module folder
          cd "$MODULE_DIR"
          zip -r "$GITHUB_WORKSPACE/$ABI.zip" ./*

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.abi }}-module
          path: $GITHUB_WORKSPACE/${{ matrix.abi }}.zip

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          artifacts: $GITHUB_WORKSPACE/${{ matrix.abi }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ github.ref_name }}
          tag: ${{ github.ref_name }}
          draft: false
          prerelease: false
          allowUpdates: true

      - name: Update JSON File
        if: startsWith(github.ref, 'refs/tags/')
        env:
          JSON_FILE: $GITHUB_WORKSPACE/${{ matrix.abi }}.json
          ABI: ${{ matrix.abi }}
          VERSION: ${{ github.ref_name }}
          REPO: ${{ github.repository }}
        run: |
          cat > "$JSON_FILE" <<EOF
{
  "version": "$VERSION",
  "versionCode": "$VERSION",
  "zipUrl": "https://github.com/$REPO/releases/download/$VERSION/$ABI.zip",
  "changelog": "https://raw.githubusercontent.com/$REPO/main/CHANGELOG.md"
}
EOF

      - name: Commit and Push JSON File
        if: startsWith(github.ref, 'refs/tags/')
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update ${{ matrix.abi }}.json for release ${{ github.ref_name }}"
          file_pattern: "${{ matrix.abi }}.json"
          branch: main  # Replace with your default branch if different
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
