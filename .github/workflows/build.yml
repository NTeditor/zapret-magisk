name: Build and Release Zapret

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-android:
    name: Android ${{ matrix.abi }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - abi: armeabi-v7a
            target: armv7a-linux-androideabi
          - abi: arm64-v8a
            target: aarch64-linux-android
          - abi: x86
            target: i686-linux-android
          - abi: x86_64
            target: x86_64-linux-android

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: zapret

      - name: Set up Android NDK
        run: |
          echo "Setting up Android NDK..."
          # –°–∫–∞—á–∏–≤–∞–µ–º –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º NDK
          wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip -O ndk.zip
          unzip ndk.zip -d $HOME
          export ANDROID_NDK_HOME=$HOME/android-ndk-r25b
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          DEPS_DIR=$GITHUB_WORKSPACE/deps
          # –ó–∞–≥—Ä—É–∑–∏–º –∏ —Å–æ–±–µ—Ä–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
          wget -qO- https://www.netfilter.org/pub/libnfnetlink/libnfnetlink-1.0.2.tar.bz2 | tar -xj
          wget -qO- https://www.netfilter.org/pub/libmnl/libmnl-1.0.5.tar.bz2 | tar -xj
          wget -qO- https://www.netfilter.org/pub/libnetfilter_queue/libnetfilter_queue-1.0.5.tar.bz2 | tar -xj
          patch -p1 -d libnetfilter_queue-* -i ../zapret/.github/workflows/libnetfilter_queue-android.patch

          for i in libmnl libnfnetlink libnetfilter_queue ; do
            (
              cd $i-*
              CFLAGS="-Os -flto=auto -Wno-implicit-function-declaration" \
              ./configure --prefix= --host=${{ matrix.target }} --enable-static --disable-shared --disable-dependency-tracking
              make install -j$(nproc) DESTDIR=$DEPS_DIR
            )
            sed -i "s|^prefix=.*|prefix=$DEPS_DIR|g" $DEPS_DIR/lib/pkgconfig/$i.pc
          done

      - name: Build zapret for ${{ matrix.abi }}
        env:
          ABI: ${{ matrix.abi }}
          TARGET: ${{ matrix.target }}
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
        run: |
          DEPS_DIR=$GITHUB_WORKSPACE/deps
          export TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
          export API=21
          export CC="$TOOLCHAIN/bin/clang --target=$TARGET$API"
          export AR=$TOOLCHAIN/bin/llvm-ar
          export AS=$CC
          export LD=$TOOLCHAIN/bin/ld
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          export PKG_CONFIG_PATH=$DEPS_DIR/lib/pkgconfig

          # –°–±–æ—Ä–∫–∞ zapret
          CFLAGS="-DZAPRET_GH_VER=${{ github.ref_name }} -DZAPRET_GH_HASH=${{ github.sha }} -I$DEPS_DIR/include" \
          LDFLAGS="-L$DEPS_DIR/lib" \
          make -C zapret android -j$(nproc)

      - name: Create ZIP archive for ${{ matrix.abi }}
        run: |
          zip zapret-android-${{ matrix.abi }}.zip -j zapret/binaries/my/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nfqws-${{ matrix.abi }}
          path: zapret/binaries/my/nfqws-${{ matrix.abi }}
          if-no-files-found: error

  build-module:
    name: Build Zapret Module
    runs-on: ubuntu-latest
    needs: build-android
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Android Binaries
        uses: actions/download-artifact@v4
        with:
          name: nfqws-${{ matrix.abi }}

      - name: Prepare Module
        run: |
          # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –º–æ–¥—É–ª—è
          mkdir -p module/binaries
          cp -r zapret/binaries/my/${{ matrix.abi }}/* module/binaries/

          # –ü–æ–ª—É—á–∞–µ–º commit hash –∏ –¥–∞—Ç—É –¥–ª—è –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
          COMMIT=$(git rev-parse --short HEAD)
          DATE=$(date +%Y%m%d)

          # –ü–∏—à–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –º–æ–¥—É–ª—è
          echo "id=zapret" > module.prop
          echo "name=zapret" >> module.prop
          echo "version=$DATE-$COMMIT" >> module.prop
          echo "versionCode=$DATE-$COMMIT" >> module.prop
          echo "author=sevcator, ImMALWARE, bol-van" >> module.prop
          echo "description=üñ• Bypass internet-censorship on arm64 Android devices." >> module.prop
          echo "updateJson=https://raw.githubusercontent.com/sevcator/zapret-magisk/refs/heads/main/update.json" >> module.prop

          # –°–æ–∑–¥–∞—ë–º –∞—Ä—Ö–∏–≤ –¥–ª—è –º–æ–¥—É–ª—è
          cd ..
          zip -r zm-$DATE-$COMMIT.zip module

      - name: Upload Module ZIP
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: zm-${{ github.run_id }}.zip
          asset_name: zm-${{ github.run_id }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
