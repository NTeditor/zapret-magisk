name: Build Zapret Module

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    name: Build Zapret for Android ${{ matrix.abi }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - abi: armeabi-v7a
            target: armv7a-linux-androideabi
          - abi: arm64-v8a
            target: aarch64-linux-android
          - abi: x86
            target: i686-linux-android
          - abi: x86_64
            target: x86_64-linux-android

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: bol-van/zapret
          path: zapret

      - name: Build Zapret
        env:
          ABI: ${{ matrix.abi }}
          TARGET: ${{ matrix.target }}
        run: |
          DEPS_DIR=$GITHUB_WORKSPACE/deps
          export TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
          export API=21
          export CC="$TOOLCHAIN/bin/clang --target=$TARGET$API"
          export AR=$TOOLCHAIN/bin/llvm-ar
          export AS=$CC
          export LD=$TOOLCHAIN/bin/ld
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          export PKG_CONFIG_PATH=$DEPS_DIR/lib/pkgconfig

          # Download and build netfilter libs
          wget -qO- https://www.netfilter.org/pub/libnfnetlink/libnfnetlink-1.0.2.tar.bz2 | tar -xj
          wget -qO- https://www.netfilter.org/pub/libmnl/libmnl-1.0.5.tar.bz2 | tar -xj
          wget -qO- https://www.netfilter.org/pub/libnetfilter_queue/libnetfilter_queue-1.0.5.tar.bz2 | tar -xj
          wget -qO- https://raw.githubusercontent.com/bol-van/zapret/master/.github/workflows/libnetfilter_queue-android.patch | patch -p1 -d libnetfilter_queue-1.0.5

          for i in libmnl libnfnetlink libnetfilter_queue; do
            (
              cd $i-*

              CFLAGS="-Os -flto=auto -Wno-implicit-function-declaration" \
              ./configure --prefix= --host=$TARGET --enable-static --disable-shared --disable-dependency-tracking

              make install -j$(nproc) DESTDIR=$DEPS_DIR
            )
            sed -i "s|^prefix=.*|prefix=$DEPS_DIR|g" $DEPS_DIR/lib/pkgconfig/$i.pc
          done

          CFLAGS="-DZAPRET_GH_VER=${{ github.ref_name }} -DZAPRET_GH_HASH=${{ github.sha }} -I$DEPS_DIR/include" \
          LDFLAGS="-L$DEPS_DIR/lib" \
          make -C zapret android -j$(nproc)

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nfqws-${{ matrix.abi }}
          path: zapret/binaries/my/nfqws
          if-no-files-found: error

  build-module:
    name: Build Module
    runs-on: ubuntu-latest
    needs: build-android

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        run: |
          abis=("armeabi-v7a" "arm64-v8a" "x86" "x86_64")
          for abi in "${abis[@]}"; do
            echo "Downloading nfqws-${abi} artifact..."
            curl -LO "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ github.run_id }}-nfqws-${abi}"
          done

      - name: Build Module
        run: |
          ls -l
          mkdir -p module/binaries
          cp nfqws-* module/binaries/
          cd module

          COMMIT=$(git rev-parse --short HEAD)
          DATE=$(date +%Y%m%d)

          echo "id=zapret" > module.prop
          echo "name=zapret" >> module.prop
          echo "version=$DATE-$COMMIT" >> module.prop
          echo "versionCode=$DATE-$COMMIT" >> module.prop
          echo "author=sevcator, ImMALWARE, bol-van" >> module.prop
          echo "description=ðŸ–¥ Bypass internet-censorship on Android devices." >> module.prop
          echo "updateJson=https://raw.githubusercontent.com/sevcator/zapret-magisk/refs/heads/main/update.json" >> module.prop

          cd ..
          zip -r zm-$DATE-$COMMIT.zip module/*

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Get current date and commit hash
        id: date_commit
        run: |
          DATE=$(date +'%Y%m%d')
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "DATE=$DATE"
          echo "COMMIT_HASH=$COMMIT_HASH"
          echo "tag_name=$DATE-$COMMIT_HASH" >> $GITHUB_ENV
          echo "release_name=$DATE-$COMMIT_HASH" >> $GITHUB_ENV

      - name: Create a Git tag
        run: |
          git tag ${{ env.tag_name }}
          git push origin ${{ env.tag_name }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag_name }}
          release_name: ${{ env.release_name }}
          draft: true # Set to true for draft, false for public
          prerelease: false # Change to true if it's a prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
