name: Build and Release Zapret

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-zapret:
    name: Build Android Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]

    steps:
      - name: Checkout bol-van/zapret Repository
        uses: actions/checkout@v3
        with:
          repository: bol-van/zapret
          path: zapret

      - name: Set up Android NDK
        run: |
          echo "Setting up Android NDK..."
          # –°–∫–∞—á–∏–≤–∞–µ–º –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º NDK
          wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip -O ndk.zip
          unzip ndk.zip -d $HOME
          export ANDROID_NDK_HOME=$HOME/android-ndk-r25b
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV

      - name: Verify NDK installation
        run: |
          echo "Checking NDK installation..."
          ls -l $ANDROID_NDK_HOME
          ls -l $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin
          which clang
          clang --version

      - name: Build for ${{ matrix.abi }}
        run: |
          # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —Å–∫—Ä–∏–ø—Ç—É –∏ –≤—ã–∑—ã–≤–∞–µ–º –µ–≥–æ
          ./build.sh ${{ matrix.abi }} $ANDROID_NDK_HOME

      - name: Upload Binary for ${{ matrix.abi }}
        uses: actions/upload-artifact@v3
        with:
          name: nfqws-${{ matrix.abi }}
          path: zapret/binaries/my/${{ matrix.abi }}/nfqws

  build-module:
    name: Build Zapret Module
    runs-on: ubuntu-latest
    needs: build-zapret
    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Binary Artifacts
        uses: actions/download-artifact@v3
        with:
          name: nfqws-${{ matrix.abi }}

      - name: Verify Downloaded Binary
        run: |
          # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω
          ls -l zapret/binaries/my/${{ matrix.abi }}
          if [ ! -f zapret/binaries/my/${{ matrix.abi }}/nfqws ]; then
            echo "Error: Binary nfqws not found!" && exit 1
          fi

      - name: Prepare Module
        run: |
          # –°–æ–∑–¥–∞–¥–∏–º –º–æ–¥—É–ª—å –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –µ–≥–æ
          mkdir -p module/binaries
          cp -r zapret/binaries/my/${{ matrix.abi }}/* module/binaries/
          cd module

          # –ü–æ–ª—É—á–∏–º —Ö—ç—à –∫–æ–º–º–∏—Ç–∞ –∏ –¥–∞—Ç—É –¥–ª—è –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
          COMMIT=$(git rev-parse --short HEAD)
          DATE=$(date +%Y%m%d)

          # –ù–∞–ø–∏—à–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –º–æ–¥—É–ª—è
          echo "id=zapret" > module.prop
          echo "name=zapret" >> module.prop
          echo "version=$DATE-$COMMIT" >> module.prop
          echo "versionCode=$DATE-$COMMIT" >> module.prop
          echo "author=sevcator, ImMALWARE, bol-van" >> module.prop
          echo "description=üñ• Bypass internet-censorship on arm64 Android devices." >> module.prop
          echo "updateJson=https://raw.githubusercontent.com/sevcator/zapret-magisk/refs/heads/main/update.json" >> module.prop

          # –°–æ–∑–¥–∞–¥–∏–º zip-—Ñ–∞–π–ª –¥–ª—è –º–æ–¥—É–ª—è
          cd ..
          zip -r zm-$DATE-$COMMIT.zip module

      - name: Publish Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: zm-${{ github.run_id }}.zip  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–º—è —Ñ–∞–π–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ
          asset_name: zm-${{ github.run_id }}.zip
          asset_content_type: application/zip
