name: build
run-name: ${{ startsWith(github.ref, 'refs/tags/') && format('Release {0}', github.ref_name) || null }}

on:
  workflow_dispatch:
  push:
    tags:
      - '[0-9]+*'

jobs:
  build-android:
    name: Android ${{ matrix.abi }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - abi: armeabi-v7a
            target: armv7a-linux-androideabi
          - abi: arm64-v8a
            target: aarch64-linux-android
          - abi: x86
            target: i686-linux-android
          - abi: x86_64
            target: x86_64-linux-android
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: bol-van/zapret
          path: zapret

      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r21e

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool autoconf automake

      - name: Build
        env:
          ABI: ${{ matrix.abi }}
          TARGET: ${{ matrix.target }}
        run: |
          DEPS_DIR=$GITHUB_WORKSPACE/deps
          export TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
          export API=21
          export CC="$TOOLCHAIN/bin/clang --target=$TARGET$API"
          export AR=$TOOLCHAIN/bin/llvm-ar
          export AS=$CC
          export LD=$TOOLCHAIN/bin/ld
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          export PKG_CONFIG_PATH=$DEPS_DIR/lib/pkgconfig

          # netfilter libs
          wget -qO- https://www.netfilter.org/pub/libnfnetlink/libnfnetlink-1.0.2.tar.bz2 | tar -xj
          wget -qO- https://www.netfilter.org/pub/libmnl/libmnl-1.0.5.tar.bz2 | tar -xj
          wget -qO- https://www.netfilter.org/pub/libnetfilter_queue/libnetfilter_queue-1.0.5.tar.bz2 | tar -xj
          patch -p1 -d libnetfilter_queue-* -i ../zapret/.github/workflows/libnetfilter_queue-android.patch

          for i in libmnl libnfnetlink libnetfilter_queue ; do
            (
              cd $i-*
              CFLAGS="-Os -flto=auto -Wno-implicit-function-declaration" \
              ./configure --prefix= --host=$TARGET --enable-static --disable-shared --disable-dependency-tracking
              make install -j$(nproc) DESTDIR=$DEPS_DIR
            )
            sed -i "s|^prefix=.*|prefix=$DEPS_DIR|g" $DEPS_DIR/lib/pkgconfig/$i.pc
          done

          # zapret
          CFLAGS="-DZAPRET_GH_VER=${{ github.ref_name }} -DZAPRET_GH_HASH=${{ github.sha }} -I$DEPS_DIR/include" \
          LDFLAGS="-L$DEPS_DIR/lib" \
          make -C zapret android -j$(nproc)

      - name: Prepare Module
        run: |
          MODULE_DIR=$GITHUB_WORKSPACE/module
          mkdir -p $MODULE_DIR/binaries
          cp zapret/binaries/my/nfqws $MODULE_DIR/binaries/
          DATE=$(date +%d%m%Y)
          COMMIT_HASH=$(git -C zapret rev-parse --short HEAD)
          VERSION="$DATE-$COMMIT_HASH"
          sed -i "s/-abi-/$ABI/" $MODULE_DIR/module.prop
          sed -i "s/^version=.*/version=$VERSION/" $MODULE_DIR/module.prop
          zip -r $ABI.zip $MODULE_DIR

      - name: Update JSON File
        run: |
          JSON_FILE=$GITHUB_WORKSPACE/$ABI.json
          cat <<EOF > $JSON_FILE
          {
              "version": "$VERSION",
              "versionCode": "$VERSION",
              "zipUrl": "https://github.com/sevcator/zapret-magisk/releases/latest/download/$ABI.zip",
              "changelog": "https://raw.githubusercontent.com/sevcator/zapret-magisk/refs/heads/main/CHANGELOG.md"
          }
          EOF

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: $ABI.zip
          path: $ABI.zip
          if-no-files-found: error

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: $ABI.zip
          asset_name: $ABI.zip
          asset_content_type: application/zip

      - name: Commit and Push JSON File
        run: |
          cd zapret
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ../$ABI.json
          git commit -m "Update $ABI.json for release ${{ github.ref_name }}"
          git push
